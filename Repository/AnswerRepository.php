<?php

namespace CPASimUSante\SimupollBundle\Repository;

/**
 * ResponseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnswerRepository extends \Doctrine\ORM\EntityRepository
{
    public function getSimupollAllResponsesForAllUsersQuery($simupollId, $order)
    {
        return $this->getQuerySimupollAllResponsesForAllUsers($simupollId, $order)->getResult();
    }
    /**
     *
     * @return array
     */
    public function getQuerySimupollAllResponsesForAllUsers($simupollId, $order)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('a')
            ->from('CPASimUSante\\SimupollBundle\\Entity\\Answer', 'a')
            ->join('a.paper', 'p')
            ->join('p.simupoll', 's')
            ->where('s.id = :sid')
//            ->orderBy($order, 'ASC')
            ->setParameters(array('sid' => $simupollId));
        return $qb->getQuery();
    }

    /**
     *
     * @param $sid
     * @param $pid
     * @param $current
     * @param $next
     * @return array
     */
    public function getAnswersForQuestions($sid, $pid, $current, $next)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('a.id, q.id as qid, a.answer')
            ->from('CPASimUSante\SimupollBundle\Entity\Answer', 'a')
            ->leftJoin('a.question', 'q')
            ->leftJoin('q.category', 'c')
            ->where('q.simupoll = :simupoll');
        if ($pid != 0) {
            $qb->andWhere('a.paper = :paper');
            $qb->setParameter('paper', $pid);
        }
        if ($current != -1) {
            $qb->andWhere('c.lft >=:current');
            $qb->setParameter('current', $current);
        }
        if ($next != -1) {
            $qb->andWhere('c.lft <=:next');
            $qb->setParameter('next', $next);
        }
        $qb->orderBy('q.id', 'ASC');
        $qb->setParameter('simupoll', $sid);
        //die($qb->getQuery()->getSQL());
        //return $qb->getQuery()->getSQL();
        return $qb->getQuery()->getResult();
    }
}
